name: release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: "1.15"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ env.GO_VERSION }}

    - uses: actions/checkout@v2
      name: Check out code into the Go module directory

    - name: Build
      run: make dist VERSION=${{ github.event.release.tag_name }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.event.release.tag_name }}
        draft: true
        prerelease: true

    - name: Upload linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/linux.tgz
        asset_name: linux-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/tar+gzip

    - name: Upload macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/darwin.tgz
        asset_name: darwin-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/tar+gzip

    - name: Upload windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/windows.tgz
        asset_name: windows-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/tar+gzip
